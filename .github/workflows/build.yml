name: Build

on:
  workflow_call:
    inputs:
      firmware-retention-days:
        required: true
        type: number
      build-type:
        required: true
        type: string

permissions:
  contents: write #required to update release tags

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: normal check out repo
        if: inputs.build-type != 'nightly' && inputs.build-type != 'release'
        uses: actions/checkout@v3
      - name: nightly check out repo
        if: inputs.build-type == 'nightly'
        uses: actions/checkout@v3
        with:
          ref: 'community'
      - name: release check out repo
        if: inputs.build-type == 'release'
        uses: actions/checkout@v3
        with:
          ref: 'release/1.0'
      - name: Fetch container image
        run: |
          docker pull ghcr.io/litui/dbt-toolchain:v$(cat toolchain/REQUIRED_VERSION)
      - name: Run build
        run: |
          docker run --rm \
            --user=$(id --user):$(id --group) \
            -e DBT_NO_PYTHON_UPGRADE=1 \
            -v $(pwd):/src \
            ghcr.io/litui/dbt-toolchain:v$(cat toolchain/REQUIRED_VERSION) \
            build \
            --verbose \
            --tag-metadata \
            --type ${{ inputs.build-type }} \
            all

      - name: Publish built firmware (debug-bin)
        uses: actions/upload-artifact@v3
        with:
          name: debug.bin
          path: build/Debug/deluge*.bin
          if-no-files-found: error
          retention-days: ${{ inputs.firmware-retention-days }}
      - name: Publish built firmware (release-bin)
        uses: actions/upload-artifact@v3
        with:
          name: release.bin
          path: build/Release/deluge*.bin
          if-no-files-found: error
          retention-days: ${{ inputs.firmware-retention-days }}
      - name: Publish built firmware (elf)
        uses: actions/upload-artifact@v3
        with:
          name: all-elfs
          path: build/*/deluge*.elf
          if-no-files-found: error
          retention-days: ${{ inputs.firmware-retention-days }}

      - name: Create nightlies archive
        if: inputs.build-type == 'nightly'
        run: |
          zip -j ./nightly.zip build/Release/deluge*.bin
      - name: Update Nightly Release
        if: inputs.build-type == 'nightly'
        uses: andelf/nightly-release@main #https://github.com/marketplace/actions/nightly-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: nightly #will update tag to point at current head
          name: 'Deluge Nightly Release $$' #will fill in with date
          prerelease: true
          body: 'This is a nightly release and may have bugs - please report them!
          https://github.com/SynthstromAudible/DelugeFirmware/issues/new/choose'
          files: |
            ./nightly.zip
      - name: Create release archive
        if: inputs.build-type == 'release'
        run: |
          zip -j ./beta.zip build/Release/deluge*.bin
      - name: Update Beta Release
        if: inputs.build-type == 'release'
        uses: andelf/nightly-release@main #https://github.com/marketplace/actions/nightly-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: beta #will update tag to point at current head
          name: 'Deluge Beta Release $$' #will fill in with date
          prerelease: true
          body: 'This is a beta release and may have bugs - please report them!
          https://github.com/SynthstromAudible/DelugeFirmware/issues/new/choose'
          files: |
            ./beta.zip
