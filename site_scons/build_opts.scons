import os

Import("env")

env.AppendUnique(
    CXXFLAGS=[
        "-includepreinclude_cxx.h",
    ]
)
env.AppendUnique(
    CCFLAGS=[
        "-fmessage-length=0",
        "-fsigned-char",
        "-ffunction-sections",
        "-Wnull-dereference",
        "-fdata-sections",
        # "-mcpu=cortex-a9",
        "-march=armv7-a",
        "-marm",
        "-mfpu=neon",
        "-fsigned-char",
        "-mfloat-abi=hard",
        "-mthumb-interwork",
        "-mlittle-endian",
        "-fdiagnostics-parseable-fixits",
    ],
    ASMPATH=[
        "src/NE10/common",
    ],
    CPPPATH=["src/deluge", "src/NE10/modules", "src/NE10/inc", "src", "src/fatfs"],
)
env["ASPATH"] = " {}".format(" ".join(['-I"{}"'.format(inc) for inc in env["ASMPATH"]]))


if env["BUILD_TYPE"] == "debug":
    env.AppendUnique(
        CPPDEFINES=["IN_HARDWARE_DEBUG=1", "ENABLE_TEXT_OUTPUT=1", "HAVE_RTT=1"],
        CCFLAGS=[
            "-Og",
            "-g",
            "-ggdb",
            "-Wstack-usage=100",
        ],
    )
else:  # env["BUILD_TYPE"] == 'release'
    env.AppendUnique(
        CPPDEFINES=["IN_HARDWARE_DEBUG=0", "ENABLE_TEXT_OUTPUT=0", "HAVE_RTT=0"],
        CCFLAGS=[
            "-O2",
            "-flto",
            "-Wstack-usage=1000",
        ],
    )

if env["BUILD_HARDWARE"] == "7seg":
    env.AppendUnique(CPPDEFINES=["HAVE_OLED=0"])
else:  # env["BUILD_HARDWARE"] == "oled"
    env.AppendUnique(CPPDEFINES=["HAVE_OLED=1"])

env.AppendUnique(
    LINKFLAGS=[
        "-T$LINKER_SCRIPT_PATH",
        "-Wl,--start-group",
        "-Wl,--end-group",
        "-nostartfiles",
        "-Xlinker",
        "--gc-sections",
        '-Wl,-Map,"$MAPFILE"',
        "-flto",
        "-Wl,-estart",
        "--specs=rdimon.specs",
    ],
)
