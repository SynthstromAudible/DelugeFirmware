import os

AddOption(
    "--e2_orig_prefix",
    dest="e2_orig_prefix",
    action="store_true",
    help='Override the "dbt-" build prefix and force "e2-" directory prefixes instead.'
    "This is needed to maintain the old directory structure in e2.",
)

AddOption(
    "--nowo",
    "--no-owo",
    "--no-uwu",
    dest="no_progress",
    action="store_true",
    help="Suppress the cute UwU/uwu/owo progress indicator and make it sad ;_;",
)

AddOption(
    "--only-prepare",
    dest="only_prepare",
    action="store_true",
    help="For the given build targets, only prepare for building; do not actually "
    "build objects or binaries. Please put this in your workflow before building using an "
    "external tool.",
)

AddOption(
    "--option-file",
    dest="optionfile",
    type="string",
    nargs=1,
    action="store",
    default="dbt_options.py",
    help="Optional file for passing additional arguments.",
)

AddOption(
    "--save-default-options",
    dest="save_options",
    action="store_true",
    help="Saves passed in commandline variables to defaults file specified by --option-file.",
)

AddOption(
    "--spew",
    dest="spew",
    action="store_true",
    help="Shortcut for the most verbose output. Also disables the progress indicator, for "
    "clean logging.",
)

AddOption(
    "--verbose",
    dest="verbosity",
    default=1,
    action="store",
    type=int,
    metavar="LEVEL",
    help="Level of noise DBT should make: 0 sets the --silent/--quiet flag and suppresses "
    "whatever we can; 1 is the default; 2 enables build command output; 3 is equivalent to --spew.",
)

# COMMANDLINE VARIABLES

vars = Variables(GetOption("optionfile"), ARGUMENTS)

vars.AddVariables(
    (
        "DEBUG",
        "When set to 0 or 1, enables only debug or release targets, respectively.",
    ),
    (
        "DEBUG_HARDWARE",
        'Defaults to "delugeprobe" (CMSIS-DAP). "esp-prog" (FTDI) is also supported.',
        "delugeprobe",
    ),
    ("DEBUG_PROTOCOL", 'Defaults to "swd". "jtag" is also supported.', "swd"),
    ("GDB_REMOTE", "The host:port or com port of the GDB server.", "localhost:3333"),
    (
        "OLED",
        "When set to 0 or 1, enables only 7-segment or OLED targets, respectively.",
    ),
    (
        "OPENOCD_OPTS",
        "Alternate options to pass to OpenOCD",
        "",
    ),
)

Return("vars")
